CREATE TABLE IF NOT EXISTS mpa_ratings (
    mpa_id BIGINT PRIMARY KEY,
    name VARCHAR(10) NOT NULL,
    description VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS genres (
    genre_id BIGINT PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 100) PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    login VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100),
    birthday DATE
);

CREATE TABLE IF NOT EXISTS films (
    film_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 100) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(255),
    release_date DATE,
    duration INTEGER,
    mpa_id BIGINT REFERENCES mpa_ratings (mpa_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id BIGINT REFERENCES genres (genre_id),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS friends (
    user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    confirmed BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes (
    film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
    user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS reviews (
    review_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, --id отзыва
    content varchar(100),
    is_positive boolean default true,
    user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE, --id пользователя
    film_id BIGINT REFERENCES films (film_id), -- id фильма
    useful int DEFAULT 0
);

CREATE TABLE IF NOT EXISTS estimations (
    review_id BIGINT REFERENCES reviews (review_id) ON DELETE CASCADE, --id отзыва
    user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE, --id пользователя
    is_like boolean default true,
    primary key (review_id, user_id)
);

